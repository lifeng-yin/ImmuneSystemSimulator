/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:window1:493466:
  appc.background(230);
} //_CODE_:window1:493466:

public void PauseButtonClicked(GButton source, GEvent event) { //_CODE_:PauseButton:473335:
  println("PauseButton - GButton >> GEvent." + event + " @ " + millis());
  if (isPaused) {
    loop();
    isPaused = false;
  }
  else {
    noLoop();
    isPaused = true;
  }
    
  
} //_CODE_:PauseButton:473335:

public void ResetButtonClicked(GButton source, GEvent event) { //_CODE_:ResetButton:696291:
  println("ResetButton - GButton >> GEvent." + event + " @ " + millis());
  battlefield = new Battlefield();
  createGUI();
} //_CODE_:ResetButton:696291:

public void PathogenSpeedSliderDrag(GCustomSlider source, GEvent event) { //_CODE_:PathogenSpeedSlider:780839:
  println("PathogenSpeedSlider - GCustomSlider >> GEvent." + event + " @ " + millis());
  PATHOGEN_SPEED = source.getValueF();
} //_CODE_:PathogenSpeedSlider:780839:

public void PathogenDamageSliderDrag(GCustomSlider source, GEvent event) { //_CODE_:PathogenDamageSlider:678413:
  println("PathogenDamageSlider - GCustomSlider >> GEvent." + event + " @ " + millis());
  PATHOGEN_DAMAGE = source.getValueF();
} //_CODE_:PathogenDamageSlider:678413:

public void PathogenSpawnRateSliderDrag(GCustomSlider source, GEvent event) { //_CODE_:PathogenSpawnRateSlider:572769:
  println("PathogenSpawnRateSlider - GCustomSlider >> GEvent." + event + " @ " + millis());
  PATHOGEN_SPAWN_RATE = source.getValueF();
} //_CODE_:PathogenSpawnRateSlider:572769:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  window1 = GWindow.getWindow(this, "Window title", 0, 0, 200, 300, JAVA2D);
  window1.noLoop();
  window1.setActionOnClose(G4P.KEEP_OPEN);
  window1.addDrawHandler(this, "win_draw1");
  PauseButton = new GButton(window1, 15, 17, 80, 30);
  PauseButton.setText("Pause");
  PauseButton.addEventHandler(this, "PauseButtonClicked");
  ResetButton = new GButton(window1, 108, 17, 80, 30);
  ResetButton.setText("Reset");
  ResetButton.addEventHandler(this, "ResetButtonClicked");
  label1 = new GLabel(window1, 16, 69, 60, 30);
  label1.setTextAlign(GAlign.RIGHT, GAlign.MIDDLE);
  label1.setText("Pathogen speed");
  label1.setOpaque(false);
  PathogenSpeedSlider = new GCustomSlider(window1, 82, 66, 100, 40, "grey_blue");
  PathogenSpeedSlider.setLimits(1.0, 0.0, 3.0);
  PathogenSpeedSlider.setNumberFormat(G4P.DECIMAL, 2);
  PathogenSpeedSlider.setOpaque(false);
  PathogenSpeedSlider.addEventHandler(this, "PathogenSpeedSliderDrag");
  label2 = new GLabel(window1, -5, 109, 80, 30);
  label2.setTextAlign(GAlign.RIGHT, GAlign.MIDDLE);
  label2.setText("Pathogen damage");
  label2.setOpaque(false);
  PathogenDamageSlider = new GCustomSlider(window1, 82, 105, 100, 40, "grey_blue");
  PathogenDamageSlider.setLimits(1.0, 0.0, 5.0);
  PathogenDamageSlider.setNumberFormat(G4P.DECIMAL, 2);
  PathogenDamageSlider.setOpaque(false);
  PathogenDamageSlider.addEventHandler(this, "PathogenDamageSliderDrag");
  label3 = new GLabel(window1, -5, 145, 80, 30);
  label3.setTextAlign(GAlign.RIGHT, GAlign.MIDDLE);
  label3.setText("Pathogen spawn rate");
  label3.setOpaque(false);
  PathogenSpawnRateSlider = new GCustomSlider(window1, 82, 142, 100, 40, "grey_blue");
  PathogenSpawnRateSlider.setLimits(0.33, 0.0, 1.0);
  PathogenSpawnRateSlider.setNumberFormat(G4P.DECIMAL, 2);
  PathogenSpawnRateSlider.setOpaque(false);
  PathogenSpawnRateSlider.addEventHandler(this, "PathogenSpawnRateSliderDrag");
  window1.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow window1;
GButton PauseButton; 
GButton ResetButton; 
GLabel label1; 
GCustomSlider PathogenSpeedSlider; 
GLabel label2; 
GCustomSlider PathogenDamageSlider; 
GLabel label3; 
GCustomSlider PathogenSpawnRateSlider; 
